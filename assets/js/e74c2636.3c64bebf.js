"use strict";(self.webpackChunkxcpdoc=self.webpackChunkxcpdoc||[]).push([[711],{2991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(4848),s=n(8453);const i={title:"Basic Usage"},o=void 0,c={id:"basics/usage",title:"Basic Usage",description:"Configuration",source:"@site/docs/basics/usage.md",sourceDirName:"basics",slug:"/basics/usage",permalink:"/docs/basics/usage",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/basics/usage.md",tags:[],version:"current",frontMatter:{title:"Basic Usage"},sidebar:"basics",previous:{title:"Manual Installation",permalink:"/docs/basics/manual-installation"},next:{title:"Understanding Assets on Counterparty",permalink:"/docs/basics/assets/counterparty-assets"}},a={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Counterparty CLI",id:"counterparty-cli",level:2},{value:"Quickly Catch Up with the Network",id:"quickly-catch-up-with-the-network",level:2},{value:"Start the Server",id:"start-the-server",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(t.p,{children:["Manual configuration is not necessary for most use cases, but example configuration files may be found in the ",(0,r.jsx)(t.code,{children:"docker/"})," directory."]}),"\n",(0,r.jsxs)(t.p,{children:["By default, the ",(0,r.jsx)(t.strong,{children:"configuration files"})," are named ",(0,r.jsx)(t.code,{children:"server.conf"})," and ",(0,r.jsx)(t.code,{children:"client.conf"})," and are located in the following directories:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Linux: ",(0,r.jsx)(t.code,{children:"~/.config/counterparty/"})]}),"\n",(0,r.jsxs)(t.li,{children:["Windows: ",(0,r.jsx)(t.code,{children:"%APPDATA%\\Counterparty\\"})]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Client and server log files are named ",(0,r.jsx)(t.code,{children:"counterparty.client.[testnet.]log"})," and ",(0,r.jsx)(t.code,{children:"counterparty.server.[testnet.]log"})," and are located in the following directories:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Linux: ",(0,r.jsx)(t.code,{children:"~/.cache/counterparty/log/"})]}),"\n",(0,r.jsxs)(t.li,{children:["Windows: ",(0,r.jsx)(t.code,{children:"%APPDATA%\\Local\\Counterparty\\counterparty\\Logs"})]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Counterparty API activity is logged to ",(0,r.jsx)(t.code,{children:"server.[testnet.]api.log"})," and ",(0,r.jsx)(t.code,{children:"client.[testnet.]api.log"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Counterparty database files are by default named ",(0,r.jsx)(t.code,{children:"counterparty.[testnet.]db"})," and are located in the following directories:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Linux: ",(0,r.jsx)(t.code,{children:"~/.local/share/counterparty"})]}),"\n",(0,r.jsxs)(t.li,{children:["Windows: ",(0,r.jsx)(t.code,{children:"%APPDATA%\\Roaming\\Counterparty\\counterparty"})]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["All configurable parameters in the configuration file can also be passed as arguments to the ",(0,r.jsx)(t.code,{children:"counterpart-server"})," command. Use ",(0,r.jsx)(t.code,{children:"counterparty-server --help"})," to see the list of these options."]}),"\n",(0,r.jsx)(t.h2,{id:"counterparty-cli",children:"Counterparty CLI"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["NOTE: The ",(0,r.jsx)(t.code,{children:"counterparty-client"})," CLI is currently non-functional and unsupported."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"quickly-catch-up-with-the-network",children:"Quickly Catch Up with the Network"}),"\n",(0,r.jsxs)(t.p,{children:["You will not be able to run ",(0,r.jsx)(t.code,{children:"counterparty-server"})," until ",(0,r.jsx)(t.code,{children:"addrindexrs"})," has caught up (and its RPC server is running), which in turn requires ",(0,r.jsx)(t.code,{children:"bitcoind"})," have caught up as well. The command to start the Counterparty server process is simply ",(0,r.jsx)(t.code,{children:"counterparty-server start"}),". However, simply running this command requires a long time to catch up with the network, and Counterparty must have parsed all published blocks before being operational."]}),"\n",(0,r.jsx)(t.p,{children:"There is a way to speed up the process of catching up with the network:"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"counterparty-server bootstrap"})," downloads a recent snapshot of a Counterparty database from a centralized server maintained by the Counterparty Core development team. Because this method does not involve verifying the history of Counterparty transactions yourself, ",(0,r.jsxs)(t.strong,{children:["the ",(0,r.jsx)(t.code,{children:"bootstrap"})," command should not be used for mission-critical, commercial or public-facing nodes."]})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"counterparty-server bootstrap\n"})}),"\n",(0,r.jsx)(t.h2,{id:"start-the-server",children:"Start the Server"}),"\n",(0,r.jsxs)(t.p,{children:["Once the Counterparty server has caught up with the network, you may start the server simply with ",(0,r.jsx)(t.code,{children:"counterparty start"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"counterparty-server start\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Note: During database initialization, ",(0,r.jsx)(t.code,{children:"counterparty-server"})," performs a database integrity check. Depending on your configuration, this operation may take more or less time. You can disable this check with the ",(0,r.jsx)(t.code,{children:"--skip-db-check"})," flag."]}),"\n",(0,r.jsxs)(t.p,{children:["Important: By default, ",(0,r.jsx)(t.code,{children:"counterparty-server"})," uses cookie authentication to connect to Bitcoin Core. If the directory containing the Bitcoin Core data (",(0,r.jsx)(t.code,{children:"datadir"})," in the Bitcoin Core configuration file) is different from ",(0,r.jsx)(t.code,{children:"~/.bitcoin/"}),", you must specify the path to the cookie with the ",(0,r.jsx)(t.code,{children:"--backend-cookie-file"})," flag:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"counterparty-server start --backend-cookie-file /data/.cookie\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);