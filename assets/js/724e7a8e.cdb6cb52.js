"use strict";(self.webpackChunkxcpdoc=self.webpackChunkxcpdoc||[]).push([[596],{7794:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=n(4848),s=n(8453);const a={},o="Taproot Envelope",r={id:"advanced/specifications/taproot-envelope",title:"Taproot Envelope",description:"The new taproot encoding allows embedding Counterparty data in transaction witnesses. It uses an envelope script similar to Ordinals.",source:"@site/docs/advanced/specifications/taproot-envelope.md",sourceDirName:"advanced/specifications",slug:"/advanced/specifications/taproot-envelope",permalink:"/docs/advanced/specifications/taproot-envelope",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/advanced/specifications/taproot-envelope.md",tags:[],version:"current",frontMatter:{},sidebar:"advanced",previous:{title:"Counterparty Data Encoding Methods",permalink:"/docs/advanced/specifications/bitcoin-data-storage-report"},next:{title:"CBOR Format Migration Guide",permalink:"/docs/advanced/specifications/transactions-format"}},c={},d=[{value:"Composition",id:"composition",level:2},{value:"Compatibility with Ordinals",id:"compatibility-with-ordinals",level:3},{value:"Signature",id:"signature",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"taproot-envelope",children:"Taproot Envelope"}),"\n",(0,i.jsxs)(t.p,{children:["The new ",(0,i.jsx)(t.code,{children:"taproot"})," encoding allows embedding Counterparty data in transaction witnesses. It uses an envelope script similar to Ordinals.\nMain Advantages:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Ability to embed up to 400Kb of data"}),"\n",(0,i.jsx)(t.li,{children:"Benefit from reduced transaction fees (witnesses being 4 times cheaper than the rest of the transaction)\nMain Disadvantages:"}),"\n",(0,i.jsx)(t.li,{children:"The need to broadcast two transactions: a Commit transaction and a Reveal transaction"}),"\n",(0,i.jsx)(t.li,{children:"The difficulty of signing the second Reveal transaction\nThe Counterparty API makes this entire process smooth and easy by directly returning a Reveal transaction signed with a random key."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"composition",children:"Composition"}),"\n",(0,i.jsxs)(t.p,{children:["To compose a transaction with the new format, you must use the parameter ",(0,i.jsx)(t.code,{children:"encoding=taproot"}),".\nWhen this encoding is used, the Composer returns an additional field:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"signed_reveal_rawtransaction"})," which contains the signed Reveal transaction in hex format"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"compatibility-with-ordinals",children:"Compatibility with Ordinals"}),"\n",(0,i.jsx)(t.p,{children:"Counterparty uses two different envelope script formats:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"A first format optimized for size and not compatible with Ordinals"}),"\n",(0,i.jsx)(t.li,{children:"A second format totally compatible with Ordinals inscriptions"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The second format is automatically used with the following transactions:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Issuance"}),"\n",(0,i.jsx)(t.li,{children:"Fairminter"}),"\n",(0,i.jsx)(t.li,{children:"Broadcast"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For issuances and fairminter, the ",(0,i.jsx)(t.code,{children:"description"})," parameter is used as the content of the Ordinals inscription. For broadcasts, it's the ",(0,i.jsx)(t.code,{children:"text"})," parameter that is used."]}),"\n",(0,i.jsxs)(t.p,{children:["These 3 transactions accept a new parameter ",(0,i.jsx)(t.code,{children:"mime_type"}),". By default, this parameter is equal to ",(0,i.jsx)(t.code,{children:"text/plain"}),". If the MIME type designates a binary file (for example, a PNG image), the content of ",(0,i.jsx)(t.code,{children:"description"})," or ",(0,i.jsx)(t.code,{children:"text"})," must be in hexadecimal format."]}),"\n",(0,i.jsxs)(t.p,{children:["It is possible to prevent the automatic use of the format compatible with Ordinals by using the parameter ",(0,i.jsx)(t.code,{children:"inscription=false"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"signature",children:"Signature"}),"\n",(0,i.jsxs)(t.p,{children:["The first transaction is signed in the classic way, you can use the fields ",(0,i.jsx)(t.code,{children:"lock_scripts"})," and ",(0,i.jsx)(t.code,{children:"inputs_values"})," to sign it without using an external service (Electrs or Bitcoin Core)."]}),"\n",(0,i.jsx)(t.p,{children:"The second transaction is already signed, you just need to broadcast it after the first one."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);